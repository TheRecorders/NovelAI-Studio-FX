name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [21]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set version
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          VERSION=$(git describe --tags --always --dirty | sed 's/^v//; s/-/./')
          CLEAN_VERSION=$(echo $VERSION | sed 's/[^0-9.]//g')
          echo "PROJECT_VERSION=$CLEAN_VERSION" >> $GITHUB_ENV
          echo "Set version to $CLEAN_VERSION"
        shell: bash

      - name: Update pom.xml version
        run: mvn versions:set -DnewVersion=${{ env.PROJECT_VERSION }}

      - name: Display Java version
        run: java -version

      - name: Display Maven version
        run: mvn --version

      - name: Clean and compile Maven project
        run: mvn clean compile

      - name: Package with Maven
        run: mvn package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NovelAIDesktopFX-${{ matrix.os }}-${{ env.PROJECT_VERSION }}
          path: target/NovelAIDesktopFX-*.jar

      - name: Run tests
        run: mvn test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.java }}-${{ env.PROJECT_VERSION }}
          path: target/surefire-reports

      - name: Upload Maven logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs-${{ matrix.os }}-${{ matrix.java }}-${{ env.PROJECT_VERSION }}
          path: ~/.m2/repository/.m2.log